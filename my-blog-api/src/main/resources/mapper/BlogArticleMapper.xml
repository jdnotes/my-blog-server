<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easy.blog.api.dao.BlogArticleMapper">
    <resultMap id="BaseResultMap" type="com.easy.blog.api.model.BlogArticle">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="title" jdbcType="VARCHAR" property="title"/>
        <result column="second_title" jdbcType="VARCHAR" property="secondTitle"/>
        <result column="logo" jdbcType="VARCHAR" property="logo"/>
        <result column="tags" jdbcType="VARCHAR" property="tags"/>
        <result column="article_type" jdbcType="TINYINT" property="articleType"/>
        <result column="article_section" jdbcType="VARCHAR" property="articleSection"/>
        <result column="read_num" jdbcType="INTEGER" property="readNum"/>
        <result column="like_num" jdbcType="INTEGER" property="likeNum"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="level" jdbcType="TINYINT" property="level"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
    </resultMap>

    <resultMap extends="BaseResultMap" id="ResultMapWithBLOBs" type="com.easy.blog.api.model.BlogArticle">
        <result column="article_markdown" jdbcType="LONGVARCHAR" property="articleMarkdown"/>
        <result column="article_html" jdbcType="LONGVARCHAR" property="articleHtml"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, code, title, second_title, logo, tags, article_type, article_section, read_num,
        like_num, sort, level, status, create_date, update_date
    </sql>

    <sql id="Blob_Column_List">
        article_markdown, article_html
    </sql>

    <select id="get" parameterType="java.lang.Long" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_blog_article
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="delete" parameterType="java.lang.Long">
        delete from t_blog_article
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.easy.blog.api.model.BlogArticle">
        insert into t_blog_article (id, code, title,
        second_title, logo, tags,
        article_type, article_section, read_num,
        like_num, sort, level,
        status, create_date, update_date,
        article_markdown, article_html)
        values (#{id,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR}, #{title,jdbcType=VARCHAR},
        #{secondTitle,jdbcType=VARCHAR}, #{logo,jdbcType=VARCHAR}, #{tags,jdbcType=VARCHAR},
        #{articleType,jdbcType=TINYINT}, #{articleSection,jdbcType=VARCHAR}, #{readNum,jdbcType=INTEGER},
        #{likeNum,jdbcType=INTEGER}, #{sort,jdbcType=INTEGER}, #{level,jdbcType=TINYINT},
        #{status,jdbcType=TINYINT}, #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP},
        #{articleMarkdown,jdbcType=LONGVARCHAR}, #{articleHtml,jdbcType=LONGVARCHAR})
    </insert>

    <insert id="insertSelective" parameterType="com.easy.blog.api.model.BlogArticle">
        insert into t_blog_article
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="title != null">
                title,
            </if>
            <if test="secondTitle != null">
                second_title,
            </if>
            <if test="logo != null">
                logo,
            </if>
            <if test="tags != null">
                tags,
            </if>
            <if test="articleType != null">
                article_type,
            </if>
            <if test="articleSection != null">
                article_section,
            </if>
            <if test="readNum != null">
                read_num,
            </if>
            <if test="likeNum != null">
                like_num,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="level != null">
                level,
            </if>
            <if test="status != null">
                status,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="articleMarkdown != null">
                article_markdown,
            </if>
            <if test="articleHtml != null">
                article_html,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                #{title,jdbcType=VARCHAR},
            </if>
            <if test="secondTitle != null">
                #{secondTitle,jdbcType=VARCHAR},
            </if>
            <if test="logo != null">
                #{logo,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                #{tags,jdbcType=VARCHAR},
            </if>
            <if test="articleType != null">
                #{articleType,jdbcType=TINYINT},
            </if>
            <if test="articleSection != null">
                #{articleSection,jdbcType=VARCHAR},
            </if>
            <if test="readNum != null">
                #{readNum,jdbcType=INTEGER},
            </if>
            <if test="likeNum != null">
                #{likeNum,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                #{level,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="articleMarkdown != null">
                #{articleMarkdown,jdbcType=LONGVARCHAR},
            </if>
            <if test="articleHtml != null">
                #{articleHtml,jdbcType=LONGVARCHAR},
            </if>
        </trim>
    </insert>

    <update id="updateSelective" parameterType="com.easy.blog.api.model.BlogArticle">
        update t_blog_article
        <set>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="title != null">
                title = #{title,jdbcType=VARCHAR},
            </if>
            <if test="secondTitle != null">
                second_title = #{secondTitle,jdbcType=VARCHAR},
            </if>
            <if test="logo != null">
                logo = #{logo,jdbcType=VARCHAR},
            </if>
            <if test="tags != null">
                tags = #{tags,jdbcType=VARCHAR},
            </if>
            <if test="articleType != null">
                article_type = #{articleType,jdbcType=TINYINT},
            </if>
            <if test="articleSection != null">
                article_section = #{articleSection,jdbcType=VARCHAR},
            </if>
            <if test="readNum != null">
                read_num = #{readNum,jdbcType=INTEGER},
            </if>
            <if test="likeNum != null">
                like_num = #{likeNum,jdbcType=INTEGER},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="level != null">
                level = #{level,jdbcType=TINYINT},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="articleMarkdown != null">
                article_markdown = #{articleMarkdown,jdbcType=LONGVARCHAR},
            </if>
            <if test="articleHtml != null">
                article_html = #{articleHtml,jdbcType=LONGVARCHAR},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="update" parameterType="com.easy.blog.api.model.BlogArticle">
        update t_blog_article
        set code = #{code,jdbcType=VARCHAR},
        title = #{title,jdbcType=VARCHAR},
        second_title = #{secondTitle,jdbcType=VARCHAR},
        logo = #{logo,jdbcType=VARCHAR},
        tags = #{tags,jdbcType=VARCHAR},
        article_type = #{articleType,jdbcType=TINYINT},
        article_section = #{articleSection,jdbcType=VARCHAR},
        read_num = #{readNum,jdbcType=INTEGER},
        like_num = #{likeNum,jdbcType=INTEGER},
        sort = #{sort,jdbcType=INTEGER},
        level = #{level,jdbcType=TINYINT},
        status = #{status,jdbcType=TINYINT},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        update_date = #{updateDate,jdbcType=TIMESTAMP},
        article_markdown = #{articleMarkdown,jdbcType=LONGVARCHAR},
        article_html = #{articleHtml,jdbcType=LONGVARCHAR}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getByCode" parameterType="java.lang.String" resultMap="ResultMapWithBLOBs">
        select
        <include refid="Base_Column_List"/>
        ,
        <include refid="Blob_Column_List"/>
        from t_blog_article
        where code = #{code}
    </select>

    <select id="getListByIds" parameterType="java.util.List" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_blog_article
        where id in
        <foreach collection="ids" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
        order by create_date desc
    </select>

</mapper>