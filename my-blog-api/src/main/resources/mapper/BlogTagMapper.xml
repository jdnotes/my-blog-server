<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.easy.blog.api.dao.BlogTagMapper">
    <resultMap id="BaseResultMap" type="com.easy.blog.api.model.BlogTag">
        <id column="id" jdbcType="BIGINT" property="id"/>
        <result column="parent_id" jdbcType="BIGINT" property="parentId"/>
        <result column="code" jdbcType="VARCHAR" property="code"/>
        <result column="en_name" jdbcType="VARCHAR" property="enName"/>
        <result column="tag_name" jdbcType="VARCHAR" property="tagName"/>
        <result column="icon" jdbcType="VARCHAR" property="icon"/>
        <result column="alias" jdbcType="VARCHAR" property="alias"/>
        <result column="type" jdbcType="TINYINT" property="type"/>
        <result column="sort" jdbcType="INTEGER" property="sort"/>
        <result column="create_date" jdbcType="TIMESTAMP" property="createDate"/>
        <result column="update_date" jdbcType="TIMESTAMP" property="updateDate"/>
        <result column="status" jdbcType="TINYINT" property="status"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, parent_id, code, en_name, tag_name, icon, alias, type, sort, create_date, update_date,
        status
    </sql>

    <select id="get" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_blog_tag
        where id = #{id,jdbcType=BIGINT}
    </select>

    <delete id="delete" parameterType="java.lang.Long">
        delete from t_blog_tag
        where id = #{id,jdbcType=BIGINT}
    </delete>

    <insert id="insert" parameterType="com.easy.blog.api.model.BlogTag">
        insert into t_blog_tag (id, parent_id, code,
        en_name, tag_name, icon,
        alias, type, sort,
        create_date, update_date, status
        )
        values (#{id,jdbcType=BIGINT}, #{parentId,jdbcType=BIGINT}, #{code,jdbcType=VARCHAR},
        #{enName,jdbcType=VARCHAR}, #{tagName,jdbcType=VARCHAR}, #{icon,jdbcType=VARCHAR},
        #{alias,jdbcType=VARCHAR}, #{type,jdbcType=TINYINT}, #{sort,jdbcType=INTEGER},
        #{createDate,jdbcType=TIMESTAMP}, #{updateDate,jdbcType=TIMESTAMP}, #{status,jdbcType=TINYINT}
        )
    </insert>

    <insert id="insertSelective" parameterType="com.easy.blog.api.model.BlogTag">
        insert into t_blog_tag
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">
                id,
            </if>
            <if test="parentId != null">
                parent_id,
            </if>
            <if test="code != null">
                code,
            </if>
            <if test="enName != null">
                en_name,
            </if>
            <if test="tagName != null">
                tag_name,
            </if>
            <if test="icon != null">
                icon,
            </if>
            <if test="alias != null">
                alias,
            </if>
            <if test="type != null">
                type,
            </if>
            <if test="sort != null">
                sort,
            </if>
            <if test="createDate != null">
                create_date,
            </if>
            <if test="updateDate != null">
                update_date,
            </if>
            <if test="status != null">
                status,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">
                #{id,jdbcType=BIGINT},
            </if>
            <if test="parentId != null">
                #{parentId,jdbcType=BIGINT},
            </if>
            <if test="code != null">
                #{code,jdbcType=VARCHAR},
            </if>
            <if test="enName != null">
                #{enName,jdbcType=VARCHAR},
            </if>
            <if test="tagName != null">
                #{tagName,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                #{icon,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                #{alias,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                #{type,jdbcType=TINYINT},
            </if>
            <if test="sort != null">
                #{sort,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                #{status,jdbcType=TINYINT},
            </if>
        </trim>
    </insert>

    <update id="updateSelective" parameterType="com.easy.blog.api.model.BlogTag">
        update t_blog_tag
        <set>
            <if test="parentId != null">
                parent_id = #{parentId,jdbcType=BIGINT},
            </if>
            <if test="code != null">
                code = #{code,jdbcType=VARCHAR},
            </if>
            <if test="enName != null">
                en_name = #{enName,jdbcType=VARCHAR},
            </if>
            <if test="tagName != null">
                tag_name = #{tagName,jdbcType=VARCHAR},
            </if>
            <if test="icon != null">
                icon = #{icon,jdbcType=VARCHAR},
            </if>
            <if test="alias != null">
                alias = #{alias,jdbcType=VARCHAR},
            </if>
            <if test="type != null">
                type = #{type,jdbcType=TINYINT},
            </if>
            <if test="sort != null">
                sort = #{sort,jdbcType=INTEGER},
            </if>
            <if test="createDate != null">
                create_date = #{createDate,jdbcType=TIMESTAMP},
            </if>
            <if test="updateDate != null">
                update_date = #{updateDate,jdbcType=TIMESTAMP},
            </if>
            <if test="status != null">
                status = #{status,jdbcType=TINYINT},
            </if>
        </set>
        where id = #{id,jdbcType=BIGINT}
    </update>

    <update id="update" parameterType="com.easy.blog.api.model.BlogTag">
        update t_blog_tag
        set parent_id = #{parentId,jdbcType=BIGINT},
        code = #{code,jdbcType=VARCHAR},
        en_name = #{enName,jdbcType=VARCHAR},
        tag_name = #{tagName,jdbcType=VARCHAR},
        icon = #{icon,jdbcType=VARCHAR},
        alias = #{alias,jdbcType=VARCHAR},
        type = #{type,jdbcType=TINYINT},
        sort = #{sort,jdbcType=INTEGER},
        create_date = #{createDate,jdbcType=TIMESTAMP},
        update_date = #{updateDate,jdbcType=TIMESTAMP},
        status = #{status,jdbcType=TINYINT}
        where id = #{id,jdbcType=BIGINT}
    </update>

    <select id="getTagCloud" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_blog_tag
        where `type` = 1 and `status` = 0
        order by sort
    </select>

    <select id="getSecondTags" resultMap="BaseResultMap">
        select
        ct.id, ct.parent_id, ct.code, ct.en_name, ct.tag_name, ct.alias, ct.`type`, ct.sort,
        ct.create_date, ct.update_date, ct.`status`
        from t_blog_tag as ct
        left join t_blog_tag as pt on ct.parent_id = pt.id
        where pt.code = #{parentCode} and ct.`type` = 2 and ct.`status` = 0
        order by sort
    </select>

    <select id="getTagByCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_blog_tag
        where code = #{tag}
    </select>

    <select id="getTagByCodes" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_blog_tag
        where code in
        <foreach collection="tags" index="index" item="item" open="(" separator="," close=")">
            #{item}
        </foreach>
    </select>

    <select id="getTagsByLimit" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List"/>
        from t_blog_tag
        where `type` = 1 and `status` = 0
        order by sort
        limit #{num}
    </select>


</mapper>